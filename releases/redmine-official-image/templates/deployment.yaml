{{- if or .Values.databaseType.mariadb .Values.databaseType.postgresql }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "redmine.fullname" . }}
  labels:
    app: {{ template "redmine.fullname" . }}
    chart: {{ template "redmine.chart" . }}
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  selector:
    matchLabels:
      app: {{ template "redmine.fullname" . }}
      release: "{{ .Release.Name }}"
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "redmine.fullname" . }}
        chart: {{ template "redmine.chart" . }}
        release: "{{ .Release.Name }}"
      {{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
      {{- end }}
    spec:
{{- include "redmine.imagePullSecrets" . | indent 6 }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
      containers:
      - name: {{ template "redmine.fullname" . }}
        image: {{ template "redmine.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        env:
        {{- if .Values.extraVars }}
{{ toYaml .Values.extraVars | indent 8 }}
        {{- end }}
        {{- if .Values.databaseType.mariadb }}
        - name: REDMINE_DB_MYSQL
          value: {{ .Values.externalDatabase.host | quote }}
        {{- else if .Values.databaseType.postgresql }}
        - name: REDMINE_DB_POSTGRES
          value: {{ .Values.externalDatabase.host | quote }}
        {{- end }}
        {{- if or ( .Values.databaseType.mariadb ) ( .Values.databaseType.postgresql ) }}
        - name: REDMINE_DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ printf "%s-%s" .Release.Name "externaldb" }}
              key: db-user
        - name: REDMINE_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ printf "%s-%s" .Release.Name "externaldb" }}
              key: db-password
        - name: REDMINE_DB_PORT_NUMBER
          value: {{ .Values.externalDatabase.port | quote }}
        - name: REDMINE_DB_DATABASE
          value: {{ .Values.externalDatabase.databaseName | quote }}
        {{- end }}
        {{- if ne .Values.redmineDBmigrate "true" -}}
        - name: REDMINE_NO_DB_MIGRATE
          value: true
        {{- end -}}
        {{- if .Values.redminePluginsMigrate -}}
        - name: REDMINE_PLUGINS_MIGRATE
          value: {{ .Values.redminePluginsMigrate | quote }}
        {{- end -}}
        ports:
        - name: http
          containerPort: 3000
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 300
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 5
          timeoutSeconds: 1
        volumeMounts:
        - name: redmine-data
          mountPath: /usr/src/redmine/plugins
      volumes:
      - name: redmine-data
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim | default (include "redmine.fullname" .) }}
      {{- else }}
        emptyDir: {}
      {{- end }}
{{- end }}
